Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from rdflib import Graph
# Create a Graph
model = Graph()
# Parse in an RDF file hosted on the Internet
model.parse("https://models.open223.info/guideline36-2021-4-1.ttl", format="ttl")
print(f"The model contains {len(model)} triples")
------------------


[31m---------------------------------------------------------------------------[39m
[31mHTTPError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 5[39m
[32m      3[39m model = Graph()
[32m      4[39m [38;5;66;03m# Parse in an RDF file hosted on the Internet[39;00m
[32m----> [39m[32m5[39m [43mmodel[49m[43m.[49m[43mparse[49m[43m([49m[33;43m"[39;49m[33;43mhttps://models.open223.info/guideline36-2021-4-1.ttl[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[43m=[49m[33;43m"[39;49m[33;43mttl[39;49m[33;43m"[39;49m[43m)[49m
[32m      6[39m [38;5;28mprint[39m([33mf[39m[33m"[39m[33mThe model contains [39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(model)[38;5;132;01m}[39;00m[33m triples[39m[33m"[39m)

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/rdflib/graph.py:1518[39m, in [36mGraph.parse[39m[34m(self, source, publicID, format, location, file, data, **args)[39m
[32m   1423[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mparse[39m(
[32m   1424[39m     [38;5;28mself[39m,
[32m   1425[39m     source: Optional[
[32m   (...)[39m[32m   1433[39m     **args: Any,
[32m   1434[39m ) -> Graph:
[32m   1435[39m [38;5;250m    [39m[33;03m"""[39;00m
[32m   1436[39m [33;03m    Parse an RDF source adding the resulting triples to the Graph.[39;00m
[32m   1437[39m 
[32m   (...)[39m[32m   1515[39m 
[32m   1516[39m [33;03m    """[39;00m
[32m-> [39m[32m1518[39m     source = [43mcreate_input_source[49m[43m([49m
[32m   1519[39m [43m        [49m[43msource[49m[43m=[49m[43msource[49m[43m,[49m
[32m   1520[39m [43m        [49m[43mpublicID[49m[43m=[49m[43mpublicID[49m[43m,[49m
[32m   1521[39m [43m        [49m[43mlocation[49m[43m=[49m[43mlocation[49m[43m,[49m
[32m   1522[39m [43m        [49m[43mfile[49m[43m=[49m[43mfile[49m[43m,[49m
[32m   1523[39m [43m        [49m[43mdata[49m[43m=[49m[43mdata[49m[43m,[49m
[32m   1524[39m [43m        [49m[38;5;28;43mformat[39;49m[43m=[49m[38;5;28;43mformat[39;49m[43m,[49m
[32m   1525[39m [43m    [49m[43m)[49m
[32m   1526[39m     [38;5;28;01mif[39;00m [38;5;28mformat[39m [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m   1527[39m         [38;5;28mformat[39m = source.content_type

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/rdflib/parser.py:735[39m, in [36mcreate_input_source[39m[34m(source, publicID, location, file, data, format)[39m
[32m    728[39m         [38;5;28;01massert[39;00m data [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m
[32m    729[39m         [38;5;28;01massert[39;00m source [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m
[32m    730[39m     (
[32m    731[39m         absolute_location,
[32m    732[39m         auto_close,
[32m    733[39m         file,
[32m    734[39m         input_source,
[32m--> [39m[32m735[39m     ) = [43m_create_input_source_from_location[49m[43m([49m
[32m    736[39m [43m        [49m[43mfile[49m[43m=[49m[43mfile[49m[43m,[49m
[32m    737[39m [43m        [49m[38;5;28;43mformat[39;49m[43m=[49m[38;5;28;43mformat[39;49m[43m,[49m
[32m    738[39m [43m        [49m[43minput_source[49m[43m=[49m[43minput_source[49m[43m,[49m
[32m    739[39m [43m        [49m[43mlocation[49m[43m=[49m[43mlocation[49m[43m,[49m
[32m    740[39m [43m    [49m[43m)[49m
[32m    742[39m [38;5;28;01mif[39;00m file [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m    743[39m     [38;5;28;01mif[39;00m TYPE_CHECKING:

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/rdflib/parser.py:797[39m, in [36m_create_input_source_from_location[39m[34m(file, format, input_source, location)[39m
[32m    795[39m     file = [38;5;28mopen[39m(filename, [33m"[39m[33mrb[39m[33m"[39m)
[32m    796[39m [38;5;28;01melse[39;00m:
[32m--> [39m[32m797[39m     input_source = [43mURLInputSource[49m[43m([49m[43mabsolute_location[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[43m)[49m
[32m    799[39m auto_close = [38;5;28;01mTrue[39;00m
[32m    800[39m [38;5;66;03m# publicID = publicID or absolute_location  # Further to fix[39;00m
[32m    801[39m [38;5;66;03m# for issue 130[39;00m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/rdflib/parser.py:594[39m, in [36mURLInputSource.__init__[39m[34m(self, system_id, format)[39m
[32m    590[39m     myheaders[[33m"[39m[33mAccept[39m[33m"[39m] = [33m"[39m[33m, [39m[33m"[39m.join(acc)
[32m    592[39m req = Request(system_id, [38;5;28;01mNone[39;00m, myheaders)  [38;5;66;03m# type: ignore[arg-type][39;00m
[32m--> [39m[32m594[39m response: addinfourl = [43m_urlopen[49m[43m([49m[43mreq[49m[43m)[49m
[32m    595[39m [38;5;28mself[39m.url = response.geturl()  [38;5;66;03m# in case redirections took place[39;00m
[32m    596[39m [38;5;28mself[39m.links = [38;5;28mself[39m.get_links(response)

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/rdflib/_networking.py:106[39m, in [36m_urlopen[39m[34m(request)[39m
[32m     95[39m [38;5;250m[39m[33;03m"""[39;00m
[32m     96[39m [33;03mThis is a shim for `urlopen` that handles HTTP redirects with status code[39;00m
[32m     97[39m [33;03m308 (Permanent Redirect).[39;00m
[32m   (...)[39m[32m    103[39m [33;03m:return: The response to the request.[39;00m
[32m    104[39m [33;03m"""[39;00m
[32m    105[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m106[39m     [38;5;28;01mreturn[39;00m [43murlopen[49m[43m([49m[43mrequest[49m[43m)[49m
[32m    107[39m [38;5;28;01mexcept[39;00m HTTPError [38;5;28;01mas[39;00m error:
[32m    108[39m     [38;5;28;01mif[39;00m error.code == [32m308[39m [38;5;129;01mand[39;00m sys.version_info < ([32m3[39m, [32m11[39m):
[32m    109[39m         [38;5;66;03m# HTTP response code 308 (Permanent Redirect) is not supported by python[39;00m
[32m    110[39m         [38;5;66;03m# versions older than 3.11. See <https://bugs.python.org/issue40321> and[39;00m
[32m    111[39m         [38;5;66;03m# <https://github.com/python/cpython/issues/84501> for more details.[39;00m
[32m    112[39m         [38;5;66;03m# This custom error handling should be removed once all supported[39;00m
[32m    113[39m         [38;5;66;03m# versions of Python handles 308.[39;00m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/urllib/request.py:216[39m, in [36murlopen[39m[34m(url, data, timeout, cafile, capath, cadefault, context)[39m
[32m    214[39m [38;5;28;01melse[39;00m:
[32m    215[39m     opener = _opener
[32m--> [39m[32m216[39m [38;5;28;01mreturn[39;00m [43mopener[49m[43m.[49m[43mopen[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mtimeout[49m[43m)[49m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/urllib/request.py:525[39m, in [36mOpenerDirector.open[39m[34m(self, fullurl, data, timeout)[39m
[32m    523[39m [38;5;28;01mfor[39;00m processor [38;5;129;01min[39;00m [38;5;28mself[39m.process_response.get(protocol, []):
[32m    524[39m     meth = [38;5;28mgetattr[39m(processor, meth_name)
[32m--> [39m[32m525[39m     response = [43mmeth[49m[43m([49m[43mreq[49m[43m,[49m[43m [49m[43mresponse[49m[43m)[49m
[32m    527[39m [38;5;28;01mreturn[39;00m response

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/urllib/request.py:634[39m, in [36mHTTPErrorProcessor.http_response[39m[34m(self, request, response)[39m
[32m    631[39m [38;5;66;03m# According to RFC 2616, "2xx" code indicates that the client's[39;00m
[32m    632[39m [38;5;66;03m# request was successfully received, understood, and accepted.[39;00m
[32m    633[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([32m200[39m <= code < [32m300[39m):
[32m--> [39m[32m634[39m     response = [38;5;28;43mself[39;49m[43m.[49m[43mparent[49m[43m.[49m[43merror[49m[43m([49m
[32m    635[39m [43m        [49m[33;43m'[39;49m[33;43mhttp[39;49m[33;43m'[39;49m[43m,[49m[43m [49m[43mrequest[49m[43m,[49m[43m [49m[43mresponse[49m[43m,[49m[43m [49m[43mcode[49m[43m,[49m[43m [49m[43mmsg[49m[43m,[49m[43m [49m[43mhdrs[49m[43m)[49m
[32m    637[39m [38;5;28;01mreturn[39;00m response

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/urllib/request.py:563[39m, in [36mOpenerDirector.error[39m[34m(self, proto, *args)[39m
[32m    561[39m [38;5;28;01mif[39;00m http_err:
[32m    562[39m     args = ([38;5;28mdict[39m, [33m'[39m[33mdefault[39m[33m'[39m, [33m'[39m[33mhttp_error_default[39m[33m'[39m) + orig_args
[32m--> [39m[32m563[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_call_chain[49m[43m([49m[43m*[49m[43margs[49m[43m)[49m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/urllib/request.py:496[39m, in [36mOpenerDirector._call_chain[39m[34m(self, chain, kind, meth_name, *args)[39m
[32m    494[39m [38;5;28;01mfor[39;00m handler [38;5;129;01min[39;00m handlers:
[32m    495[39m     func = [38;5;28mgetattr[39m(handler, meth_name)
[32m--> [39m[32m496[39m     result = [43mfunc[49m[43m([49m[43m*[49m[43margs[49m[43m)[49m
[32m    497[39m     [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m    498[39m         [38;5;28;01mreturn[39;00m result

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/urllib/request.py:643[39m, in [36mHTTPDefaultErrorHandler.http_error_default[39m[34m(self, req, fp, code, msg, hdrs)[39m
[32m    642[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mhttp_error_default[39m([38;5;28mself[39m, req, fp, code, msg, hdrs):
[32m--> [39m[32m643[39m     [38;5;28;01mraise[39;00m HTTPError(req.full_url, code, msg, hdrs, fp)

[31mHTTPError[39m: HTTP Error 404: Not Found

